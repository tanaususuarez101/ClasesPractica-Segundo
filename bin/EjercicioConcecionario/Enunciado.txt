#####################################################

Desarrolle la clave vehículo que implementará la clase Vendible.

Un vehículo tiene una marca y modelo además de otros atríbutos

La clase vehículo tendrá dos contructores por defecto:
1. El primer constructor será el encargado de inicializar el objecto
2. El segundo contructor, además de realizar lo anterior, también carga una lista de extras del vehículo que se va a vender

Los métodos que deberá tener la clave vehiculo serán los siguientes:


boolean addExtra(Extra extra); -> añade un nueuvo extra al vehículo , si este no lo tiene ya.
boolean quitarExtra(Extra extra); -> elimina un extra del vehículo
boolean tieneExtra(Extra extra); -> devuelve si existe o no el extra que estamos buscando
set<Extra> dameExtras(); -> devuelve todos los extras que tiene el vehículo añadido
String toString(); -> devuelve una representación del vehiculo de tal forma que aparezca los distintos extras separados por barras, ejemplo :"| PriemerAtributo | SegundoAtributo | ..."

#####################################################

La clase vendible tiene los siguientes métodos:

String dameId(); -> devolvera un identificador del objecto
double damePVP(); -> Devuelve el precio del vehículo con todos los extras añadidos.
String dameNombre(); -> método abstracto que devolvera el nombre del vehiculo, que estara formado por la marca y el modelo, si este existiera en cada caso.

#####################################################

Desarrolle la clase extra que implementara la clase vendible
La claveextra tendrá un contructor encargado de inicializar el objecto

String toString(); -> devuelve una representación del extra separados , ejemplo :" PriemerAtributo  SegundoAtributo  ..."

#####################################################

Desarrolla la clase venta donde se guardará todas las ventas (tanto vehículos como extra) de un concecionario
La clase venta tendrá los siguientes métodos:
Un contructor por defecto que inicializara el objecto
double total(): -> devuelve el total de todas las ventas realizadas
List<Vendible> lista: -> devuelve una lista con todas las ventas realizadas
List<Vendible> másVendidos(int n): -> devuelve los primeros n productos más vendidos
List<Vendible> másVendidos(): -> devuelve el primer producto más vendible 
int numeroVentas(): -> devuelve el número de ventas realizadas
public String toString(): -> Devuelve una representación en tabla, donde debá aparecer los campos de las ventas realizadas en columnas (igual a una tabla de BBDD)


#####################################################

Crea una clase denominada Cocnecionario donde se pueda probar las clases anteriores